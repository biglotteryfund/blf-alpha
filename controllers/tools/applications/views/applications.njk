{% extends "layouts/main.njk" %}
{% from "components/breadcrumb-trail/macro.njk" import breadcrumbTrail %}
{% from "components/content-box/macro.njk" import contentBox %}
{% from "components/data.njk" import statsGrid %}
{% from "components/staff-status/macro.njk" import staffStatus with context %}

{% block extraHead %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js" crossorigin="anonymous"></script>
{% endblock %}

{% set countries = [
    {
        'value': '',
        'label': 'UK-wide'
    },
    {
        'value': 'england',
        'label': 'England'
    },
    {
        'value': 'northern-ireland',
        'label': 'Northern Ireland'
    },
    {
        'value': 'scotland',
        'label': 'Scotland'
    },
    {
        'value': 'wales',
        'label': 'Wales'
    }
] %}

{% block content %}
    <main role="main" id="content">
        <div class="content-box u-inner-wide-only">
            {{ breadcrumbTrail(breadcrumbs) }}
            {{ staffStatus(user) }}

            <h1 class="t--underline">
                Applications dashboard &ndash;
                {{ title -}}
                {%- if countryTitle -%}
                    : {{ countryTitle }}
                {%- endif -%}
            </h1>

            <p>
                {{ formatDate(dateRange.start) }}â€“{{ formatDate(dateRange.end) }}
                (<a href="?">Reset dates</a>)
            </p>

            <form action="" method="get" class="tools-filter-form">
                <div class="tools-filter-form__item">
                    <label for="country" class="ff-label">Country</label>

                    <select name="country">
                        {% for c in countries %}
                            <option value="{{ c.value }}"{% if c.value === country %} selected="selected"{% endif %}>
                                {{ c.label }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                <div class="tools-filter-form__item">
                    <label for="start" class="ff-label">Start date</label>
                    <input class="ff-text"
                           type="date"
                           max="{{ formatDate(now, "YYYY-MM-DD") }}"
                           value="{{ formatDate(dateRange.start, "YYYY-MM-DD") }}"
                           name="start"
                           id="start"
                    >
                </div>
                <div class="tools-filter-form__item">
                    <label for="end" class="ff-label">End date</label>
                    <input class="ff-text"
                           type="date"
                           max="{{ formatDate(now, "YYYY-MM-DD") }}"
                           value="{{ formatDate(dateRange.end, "YYYY-MM-DD") }}"
                           name="end"
                           id="end"
                    >
                </div>

                <div class="tools-filter-form__item tools-filter-form__actions">
                    <input class="btn btn--small" type="submit" value="Filter"/>
                </div>
            </form>

            <form class="country-picker u-margin-bottom-l u-margin-top">

            </form>

            {% for appType in applicationData %}
                <h3>{{ appType.title }}</h3>

                <div class="u-margin-bottom-l">
                    {% if appType.id === 'pending' %}
                        {{ statsGrid(
                            [
                                {
                                    prefix: 'there were',
                                    value: appType.data.totals.applicationsToday,
                                    title: 'applications ' + appType.verb + ' today',
                                    showNumberBeforeTitle: true
                                },
                                {
                                    prefix: 'and a total of',
                                    value: appType.data.totals.applicationsAll,
                                    suffix: 'in progress',
                                    title: 'by ' + appType.data.totals.uniqueUsers + ' unique users',
                                    showNumberBeforeTitle: true
                                },
                                {
                                    prefix: 'there are',
                                    value: appType.data.totals.completedStates,
                                    title: 'application(s) ready to submit',
                                    showNumberBeforeTitle: true
                                }
                            ]
                        ) }}
                    {% else %}
                        {{ statsGrid(
                            [
                                {
                                    prefix: 'there were',
                                    value: appType.data.totals.applicationsToday,
                                    title: 'applications ' + appType.verb + ' today',
                                    showNumberBeforeTitle: true
                                },
                                {
                                    prefix: 'and a total of',
                                    value: appType.data.totals.applicationsAll,
                                    title: 'applications ' + appType.verb,
                                    showNumberBeforeTitle: true
                                },
                                {
                                    prefix: 'made by',
                                    value: appType.data.totals.uniqueUsers,
                                    title: 'unique users',
                                    showNumberBeforeTitle: true
                                }
                            ]
                        ) }}
                    {% endif %}
                </div>

                <div class="u-margin-bottom-l">

                    {% set chartId = 'js-chart-' + appType.id %}
                    <h3>{{ appType.title }} &ndash; day-by-day</h3>
                    <div class="u-margin-bottom">
                        <canvas id="{{ chartId }}" height="300"></canvas>
                    </div>

                    <script>
                        new Chart(document.getElementById('{{ chartId }}'), {
                            type: 'bar',
                            data: {
                                {% if country %}
                                    {% set barColour = countryColour if countryColour else '#e5007d' %}
                                    datasets: [{
                                        label: '{{ appType.title }}',
                                        data: {{ appType.data.appsPerDay | dump(2) | safe }},
                                        borderColor: '{{ barColour }}',
                                        fill: '{{ barColour }}',
                                        backgroundColor: '{{ barColour }}'
                                    }]
                                {% else %}
                                    datasets: [
                                        {% for country in appType.appsByCountryByDay %}
                                            {
                                                label: '{{ country.title }}',
                                                data: {{ country.data | dump(2) | safe }},
                                                borderColor: '{{ country.colour }}',
                                                fill: '{{ country.colour }}',
                                                backgroundColor: '{{ country.colour }}'
                                            },
                                        {% endfor %}
                                        {
                                            label: '{{ appType.title }}',
                                            data: {{ appType.data.appsPerDay | dump(2) | safe }},
                                            type: 'line',
                                            fill: false
                                        }
                                    ]
                                {% endif %}
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                title: {
                                    display: false,
                                    text: 'Response distribution'
                                },
                                legend: {
                                    display: {% if country %}false{% else %}true{% endif %}
                                },
                                scales: {
                                    xAxes: [{
                                        type: 'time',
                                        offset: true,
                                        display: true,
                                        scaleLabel: {
                                            display: false,
                                            labelString: 'Date'
                                        },
                                        ticks: {
                                            major: {
                                                fontStyle: 'bold',
                                                fontColor: '#FF0000'
                                            }
                                        },
                                        time: {
                                            round: 'day',
                                            unit: 'day'
                                        },
                                        gridLines: {
                                            display: true
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: "{{ appType.title }}"
                                        },
                                        gridLines: {
                                            display: true
                                        }
                                    }]
                                }
                            }
                        });
                    </script>

                </div>
            {% endfor %}


            <div class="u-margin-bottom-l">
                <h3>Application durations  <small>(days from start to submission)</small></h3>
                {{ statsGrid(
                    [
                        {
                            prefix: 'Quickest applicant took',
                            value: statistics.appDurations.lowest | round(2) + ' minutes',
                            title: 'to submit their form',
                            showNumberBeforeTitle: true
                        },
                        {
                            prefix: 'Applicants on average took',
                            value: statistics.appDurations.average | round(2) + ' days',
                            title: 'to submit their form',
                            showNumberBeforeTitle: true
                        },
                        {
                            prefix: 'Slowest applicant took',
                            value: statistics.appDurations.highest | round(2) + ' days',
                            title: 'to submit their form',
                            showNumberBeforeTitle: true
                        }
                    ]
                ) }}
            </div>

            <div class="u-margin-bottom-l">

                <h3>Application word counts <small>(approximate totals only)</small></h3>
                {{ statsGrid(
                    [
                        {
                            prefix: 'Briefest applicant wrote',
                            value: statistics.wordCount.lowest | round + ' words',
                            showNumberBeforeTitle: true
                        },
                        {
                            prefix: 'Applicants on average wrote',
                            value: statistics.wordCount.average | round + ' words',
                            showNumberBeforeTitle: true
                        },
                        {
                            prefix: 'Wordiest applicant wrote',
                            value: statistics.wordCount.highest | round + ' words',
                            showNumberBeforeTitle: true
                        }
                    ]
                ) }}
            </div>

            <div class="u-margin-bottom-l">
                <h3>Funding amount requested</h3>
                {{ statsGrid(
                    [
                        {
                            prefix: 'Applicants requested a total of',
                            value: 'Â£' + statistics.requestedAmount.total.toLocaleString(),
                            title: 'over ' + statistics.totalSubmitted + ' applications',
                            showNumberBeforeTitle: true
                        },
                        {
                            value: 'Â£' + (statistics.requestedAmount.average | round).toLocaleString(),
                            title: 'Average funding request',
                            showNumberBeforeTitle: false
                        },
                        {
                            value: 'Â£' + (statistics.requestedAmount.lowest).toLocaleString(),
                            title: 'Smallest funding request',
                            showNumberBeforeTitle: false
                        }
                    ]
                ) }}
            </div>

            {% if feedback.length > 0 %}
                <h3>Successful applicant feedback <small>({{ feedback.length }} responses)</small></h3>
                <div class="u-margin-bottom-l"  style="max-height: 400px; overflow: auto">
                    <ul>
                        {% for f in feedback %}
                            <li>
                                <blockquote class="blockquote">
                                    <div class="blockquote__text">
                                        {{ f.message | safe }}
                                    </div>
                                    <cite class="blockquote__cite">
                                        {{ formatDate(f.createdAt.toISOString()) }}
                                    </cite>
                                </blockquote>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}

        </div>

    </main>

{% endblock %}
