{% import "components/hero.njk" as hero %}
{% import "components/headers.njk" as headers %}

{% set bodyClass = "footer--no-margin" %}
{% extends "../../layouts/main.njk" %}

{% block title %}{{ copy.title | striptags(true) }} | {% endblock %}

{% macro makeNumber(number, numberSuffix = false) %}
    <span class="number">{{ number }}</span>
    {% if numberSuffix %}<span class="number number--suffix">{{ numberSuffix }}</span>{% endif %}
{% endmacro %}

{% macro statBlock(number, caption, numberPrefix = false, numberSuffix = false, numberFirst = false, extraClass = false) %}
    <li class="grid__item stats__icon">
        <div class="stats__icon__detail {% if extraClass %} {{ extraClass }}{% endif %}">
            {% if numberPrefix %}<span class="caption">{{ numberPrefix }}</span>{% endif %}
            {% if numberFirst %}
                {{ makeNumber(number, numberSuffix) }}
                <span class="caption">{{ caption }}</span>
            {% else %}
                <span class="caption">{{ caption }}</span>
                {{ makeNumber(number, numberSuffix) }}
            {% endif %}
        </div>
    </li>
{% endmacro %}


{% block content %}

    {% set heroContent %}
        {{ headers.overlayText('h2', copy.title, 'minor') }}
    {% endset %}

    {{ hero.header('data', heroContent, 'blue') }}

    <article role="main" class="nudge-up">
        <div class="inner accent--pink a--border-top stats-holder content-box">
            <h3 class="t9 t9--a m-t">{{ copy.keyStats }}</h3>

            <ul class="unstyled grid grid--3-up grid--bordered grid--equal grid--wide-only stats">

                {#  this is a bit hacky - cycle through these classes
                    to add left rules every 3rd item (with alternating colours)
                    @TODO this could be done in CSS alone as a pattern
                 #}
                {% set cls = cycler(
                    "accent--blue accent-b-l",
                    "",
                    "",
                    "accent--pink accent-b-l",
                    "",
                    ""
                ) %}
                {% for stats in copy.data %}
                    {{ statBlock(
                        number = stats.number.value,
                        caption = stats.caption,
                        numberPrefix = stats.number.prefix,
                        numberSuffix = stats.number.suffix,
                        numberFirst = stats.number.showFirst,
                        extraClass = cls.next()
                    ) }}
                {% endfor %}
            </ul>
        </div>
    </article>


    <article role="main" class="accent--blue a--border-top map-holder">
        <div class="inner--wide-only">
            <h3 class="t9 t9--d m-b--l m-t">{{ copy.map.title }}</h3>

            <div class="map-wrapper">
                {% include "../../includes/uk-svg.njk" %}
            </div>

            <div id="js-map-panes">
                {% for region in grants %}
                    <div class="js-pane tab-pane map-info accent--blue a--border-top p bg-plain region--{{ region.id }}--b-t" id="region-{{ region.id }}">
                        <h4 class="t9 t9--d region--{{ region.id }}--b-b m-b">{{ copy.regions[region.id] }}</h4>

                        <h5 class="t4 m-t accent--blue a--text">{{ region.population | numberWithCommas }}</h5>
                        <h6 class="t5">{{ copy.map.population }}</h6>

                        <h5 class="t4 m-t accent--blue a--text">{{ region.totalAwarded }}</h5>
                        <h6 class="t5">{{ copy.map.totalAwarded }}</h6>

                        <h5 class="t4 m-t m-b-none accent--blue a--text">{{ region.beneficiaries | numberWithCommas }}</h5>
                        <h6 class="t5">{{ copy.map.totalBeneficiaries }}</h6>
                    </div>
                {% endfor %}
            </div>

        </div>
    </article>

{% endblock %}