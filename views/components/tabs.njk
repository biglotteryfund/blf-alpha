{% from "components/icons.njk" import iconArrowDown %}
{% from "components/split-nav/macro.njk" import splitNav %}

{% macro tab(title, paneId, tabClasses = false, setActive = false, id = false) %}
    <a role="tab" class="js-tab{% if tabClasses %} {{ tabClasses }}{% else %} tab{% endif %}{% if setActive %} is-active{% endif %}"
        href="#{{ paneId }}" {% if id %} id="{{ id }}"{% endif %}>
        {{ title }}
    </a>
{% endmacro %}

{% macro tabSet(tabSetId, paneSetId, tabs, tabSetClasses, tabClasses, trackClicksAsPageviews) %}
    <ul role="tablist" class="js-tabset tabset{% if tabSetClasses %} {{ tabSetClasses }}{% endif %}"
        data-paneset="{{ paneSetId }}"{% if not trackClicksAsPageviews %} data-do-not-track-pageviews="true"{% endif %}
        id="js-tabs-{{ tabSetId }}">
        {% for t in tabs %}
            <li class="tabset__item{% if tabClasses %} {{ tabClasses }}{% endif %}">{{ t }}</li>
        {% endfor %}
    </ul>
{% endmacro %}

{% macro paneSet(id, panes, showPagination = false) %}
    <div id="{{ paneSetId }}" class="js-paneset">
        {% for pane in panes %}
            <section id="{{ pane.paneId }}"
                class="js-tab-pane tab__pane{% if pane.accordion %} tab__pane--accordion{% endif %}{% if pane.setActive %} is-active{% endif %}">

                {% if pane.accordion and pane.title %}
                    <header class="tab__pane-header">
                        {{ tab(
                            title = pane.title,
                            paneId = pane.paneId,
                            tabSetId = pane.tabSetId,
                            setActive = pane.setActive
                        ) }}
                        <span class="tab__arrow u-dont-print">{{ iconArrowDown() }}</span>
                    </header>
                {% endif %}

                <article class="tab__pane-content">
                    {{ pane.content | safe }}

                    {% if showPagination %}
                        <div class="tab__pane-pagination">
                            {{ nextPrevNav(panes, loop.index) }}
                        </div>
                    {% endif %}
                </article>
            </section>
        {% endfor %}
    </div>
{% endmacro %}

{% macro nextPrevNav(panes, loopIdx) %}
    {% set zeroIndexed = loopIdx - 1 %}
    {% set nextSection = panes[zeroIndexed + 1] %}
    {% set prevSection = panes[zeroIndexed - 1] %}

    {% set prevLink = false %}
    {% if prevSection %}
        {% set prevLink = {
            "url": "#" + prevSection.paneId,
            "label": prevSection.title
        } %}
    {% endif %}

    {% set nextLink = false %}
    {% if nextSection %}
        {% set nextLink = {
            "url": "#" + nextSection.paneId,
            "label": nextSection.title
        } %}
    {% endif %}

    {{ splitNav(prevLink, nextLink) }}
{% endmacro %}

{% macro tabs(id, content, classes = false, accordion = true, showPagination = false) %}
    {% set tabSetId = id %}
    {% set paneSetId = 'js-panes-' + id %}
    {% set tabItems = [] %}
    {% set paneItems = [] %}

    {# create our tabs and panes #}
    {% for c in content %}
        {% set paneId = id + loop.index %}
        {% set tabId = id + '-' + loop.index %}
        {% if c.id %}{% set paneId = c.id %}{% endif %}

        {# create a tab and add it to an array #}
        {% set newTab = tab(
            title = c.title,
            paneId = paneId,
            tabSetId = tabSetId,
            tabClasses = classes.tabs,
            setActive = c.active,
            id = tabId
        ) %}

        {% set tabItems = (tabItems.push(newTab), tabItems) %}

        {% set paneItems = (paneItems.push({
            "paneId": paneId,
            "title": c.title,
            "content": c.content,
            "pagination": pagination,
            "accordion": accordion,
            "setActive": c.active,
            "tabSetId": tabSetId,
            "tabId": tabId
        }), paneItems) %}
    {% endfor %}

    {# a tabset with the tabs #}
    {{ tabSet(tabSetId, paneSetId, tabItems, classes.tabSet, classes.tabItem) }}

    {# and a pane set with the panes #}
    {{ paneSet(id = paneSetId, panes = paneItems, showPagination = showPagination) }}
{% endmacro %}
