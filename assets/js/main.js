/* global Sentry */
import './config';
import 'details-element-polyfill';
import FontFaceObserver from 'fontfaceobserver/fontfaceobserver.js';
import Vue from 'vue';

import { featureIsEnabled } from './helpers/features';
import common from './common/index';
import vueApps from './vue-apps/index';

if (window.Sentry) {
    Sentry.init({
        dsn: 'https://53aa5923a25c43cd9a645d9207ae5b6c@sentry.io/226416',
        environment: window.AppConfig.environment,
        ignoreErrors: [
            'fb_xd_fragment',
            /ReferenceError:.*/,
            // Error generated by a autofill function of Chrome for iOS
            // https://github.com/getsentry/sentry/issues/5267
            /Blocked a frame with origin/
        ],
        integrations(integrations) {
            // eslint-disable-next-line
            if (process.env.NODE_ENV === 'production') {
                integrations.push(new Sentry.Integrations.Vue({ Vue }));
            }
            return integrations;
        }
    });
}

if (!sessionStorage.fontsLoaded) {
    Promise.all([
        new FontFaceObserver('caecilia').load(),
        new FontFaceObserver('caecilia-sans-text').load()
    ])
        .then(function() {
            document.documentElement.className += ' ' + 'fonts-loaded';
            sessionStorage.fontsLoaded = true;
        })
        .catch(error => {
            Sentry.withScope(scope => {
                scope.setLevel('info');
                scope.setContext('message', error);
                Sentry.captureMessage('Fonts failed to load');
            });
        });
}

common.init();
vueApps.init();

if (featureIsEnabled('analytics')) {
    import(/* webpackChunkName: "analytics" */ './analytics').then(
        analytics => {
            analytics.init();
        }
    );
}
