// the list of hero images
@import '../heroes.config';

// how much the hero text should appear from the bottom
$heroSpaceFromBottom: 55px;
$heroSpaceFromLeft: 20px;

@mixin makeHeroImage($img) {
    @include responsive-ratio(map-get($img, 'width'), map-get($img, 'height'));
    background-image: url(map-get($img, 'filename'));
}

.hero {
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    position: relative;

    &.hero--major {
        height: 0;

        .hero__inner {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }

    // loop through each hero image set
    @each $hero, $imageset in $heroes {
        // output a default (mobile) image and aspect ratio
        &.hero--#{$hero} {
            $defaultImage: map-get($imageset, 'default');
            @include makeHeroImage($defaultImage);

            // for each of the non-default (eg. breakpoint-matching) sets
            // output a media query with a new image and aspect ratio
            @each $imageBreakpointName, $imageBreakpoint in $imageset {
                @if map-has-key($breakpoints, $imageBreakpointName) {
                    @include mq($imageBreakpointName) {
                        @include makeHeroImage($imageBreakpoint);
                    }
                }
            }
        }
    }
}

.hero__caption {
    $captionHeight: 26px;
    position: relative;
    height: 100%;

    span {
        position: absolute;
        height: $captionHeight;
        bottom: $heroSpaceFromBottom - $captionHeight;
        right: 0;
        background-color: rgba(0, 0, 0, 0.4);
        padding: 4px;
        color: #ffffff;
        width: auto;
        font-size: 15px;

        .contrast--high & {
            background-color: #000000;
        }

    }
}

.hero__header {

    .hero--major & {
        @include responsiveGutter(true);
    }

    position: absolute;
    bottom: $heroSpaceFromBottom;

    @include mq('tablet') {
        padding-left: $heroSpaceFromLeft; // using left here shifts the whole box
    }
}

.hero--miniature__content {
    position: relative;

    .hero__header {
        margin-left: $heroSpaceFromLeft;
    }
}