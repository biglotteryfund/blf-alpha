// layout helper: used within a containing element
// to center it according to the grid

@mixin responsiveGutter() {
    $defaultGutter: map-get($gutters, "default");
    margin-left: $defaultGutter;
    margin-right: $defaultGutter;
    width: calc(100% - #{$defaultGutter * 2});

    @each $device, $gutter in $gutters {
        @if map-has-key($breakpoints, $device) {
            @include mq($device) {
                margin-left: $gutter;
                margin-right: $gutter;
                width: calc(100% - #{$gutter * 2});
            }
        }
    }

    @media screen and (min-width: $widestScreen) {
        width: $maxInnerWidth;
        margin-left: auto;
        margin-right: auto;
        height: 100%;
    }
}

.inner {
    @include responsiveGutter();
}

.inner--wide-only {
    @include mq('tablet') {
        @include responsiveGutter();
    }
}

// @TODO put this somewhere better
main {
    transition: all 0.3s ease-in-out;
}

.grid {
    display: flex;
    align-items: center;

    > .grid__item {
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: 0;
        margin: 0;
    }

    > .grid__item--large {
        flex-grow: 2;
    }

    &.grid--equal {
        align-items: stretch;
    }

    &.grid--top {
        align-items: flex-start;
    }

    &.grid--wide-only {
        @include mq('tablet', 'max') {
            display: block;
            margin-left: 0 !important;

            > .grid__item {
                max-width: 100% !important;
                margin-left: 0 !important;
                overflow: hidden;
                width: auto !important;
            }
        }
    }

    // arbitrary
    $paddedGridGutter: 10px;
    $paddedGridGutterLarge: 30px;

    // @TODO generate these classes from a mixin

    &.grid--padded {
        margin-left: -$paddedGridGutter;

        > .grid__item {
            margin-left: $paddedGridGutter;
            margin-bottom: $spacingUnit;
        }
    }

    &.grid--padded--large {
        margin-left: -$paddedGridGutterLarge;

        > .grid__item {
            margin-left: $paddedGridGutterLarge;
            margin-bottom: $paddedGridGutterLarge;
        }
    }

    // output grid cols for 2-up, 3-up etc
    @for $i from 2 through 4 {
        $colWidth: 100% / $i;

        &.grid--#{$i}-up {
            flex-wrap: wrap;

            > .grid__item {
                flex-basis: $colWidth;
                width: $colWidth;
            }

            &.grid--padded {
                > .grid__item {
                    flex-basis: calc(#{$colWidth} - #{$paddedGridGutter});
                    max-width: calc(#{$colWidth} - #{$paddedGridGutter});
                }
            }

            &.grid--padded--large {
                > .grid__item {
                    flex-basis: calc(#{$colWidth} - #{$paddedGridGutterLarge});
                    max-width: calc(#{$colWidth} - #{$paddedGridGutterLarge});
                }
            }
        }
    }
}

.grid__item__inner {
    position: relative;
    height: 100%;
}

.grid__item__inner--flex {
    height: auto;
}

.grid__item__poster {
    display: block;
}

.grid__item__title {
    position: absolute;
    left: $spacingUnit * 1.5;
    bottom: $spacingUnit * 1.5;

    &.grid__item__title--top {
        top: $spacingUnit;
        left: $spacingUnit;
        bottom: auto;
    }

    // cribbed from ionicons
    &.grid__item__title--arrow {
        svg {
            width: 18px;
            height: 18px;
            vertical-align: middle;
            fill: #ffffff;
        }
    }
}


.overlay {
    position: fixed;
    margin: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(51, 51, 51, 0.7);
    z-index: 10;
    display: none;

    &.overlay--visible {
        display: block;
    }

    .overlay__content {
        background-color: #ffffff;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        @include mq('tablet', 'max') {
            padding: $spacingUnit;
            width: 80%;
        }
        padding: $spacingUnit * 2;
    }

    .overlay__close {
        position: absolute;
        top: 20px;
        right: 20px;
        border-radius: 100%;
        width: 50px;
        height: 50px;
        display: block;
        border: 2px solid #ffffff;
        text-align: center;

        .contrast--high & {
            background-color: #ffffff;
            @include on-interact {
                background-color: #333333;
                .icon--close {
                    fill: #ffffff;
                }
            }
        }

        @include on-interact {
            cursor: pointer;
            background-color: rgba(255, 255, 255, 0.5);
            .icon--close {
                color: #ffffff;
            }
        }

        .icon--close {
            fill: palette('soft-grey');
            .contrast--high & {
                fill: #000000;
            }
        }
    }

}

.is-on-top {
    z-index: 100;
}


.btn.btn--cta.cta--job {
    background-color: palette('pink') !important;
    margin-bottom: 20px;
    padding-left: $spacingUnit * 4;
    padding-right: $spacingUnit * 4;

    @include mq('tablet') {
        margin-bottom: 12px; // arbitrary
    }

    @include on-interact {
        background-color: darken(palette('pink'), 10%) !important;
    }
}

.google-map {
    padding: 30px 40px 0 40px;
}

.central-gap {
    $gap: 20%;
    @include mq('tablet', 'max') {
        margin-left: $gap / 2;
        margin-right: $gap / 2;
    }
    margin-left: $gap;
    margin-right: $gap;
}

.intro-header {
    margin-top: 15px;
    margin-bottom: $spacingUnit;
}

.p-cta {
    padding-top: 25px;
    padding-bottom: 30px;
    padding-left: $spacingUnit;
    padding-right: $spacingUnit;
}

.case-studies {
    div {
        margin-top: 0;
    }
    li {
        margin: 0;
    }
}

.width-natural {
    max-width: auto;
}

.gutter-mob-only {
    @include mq('tablet', 'max') {
        margin-left: $spacingUnit;
        margin-right: $spacingUnit;
    }
}

.vox-pop {
    align-items: stretch;
    @include mq('tablet', 'max') {
        flex-direction: column;
    }

    .vox-pop__image {
        @include mq('tablet', 'max') {
            flex-basis: 100%;
        }
        background-size: cover;
        background-position: center center;
        background-repeat: no-repeat;
    }

}

.vox-pop__buttons {
    @include mq('tablet', 'max') {
        position: absolute;
        width: 100%;
        top: 100px;
    }
}