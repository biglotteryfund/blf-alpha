$heroes: (
    'reading': (
        'default': (
            'width': 640,
            'height': 365,
            'filename': '../images/hero-reading--mobile.jpg'
        ),
        'tablet': (
            'width': 1200,
            'height': 386,
            'filename': '../images/hero-reading.jpg'
        ),
    )
);

@mixin makeHeroImage($img) {
    @include responsive-ratio(map-get($img, 'width'), map-get($img, 'height'));
    background-image: url(map-get($img, 'filename'));
}

.hero {
    position: relative;
    height: 0;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;

    .hero__inner {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    // loop through each hero image set
    @each $hero, $imageset in $heroes {
        // output a default (mobile) image and aspect ratio
        &.hero--#{$hero} {
            $defaultImage: map-get($imageset, 'default');
            @include makeHeroImage($defaultImage);

            // for each of the non-default (eg. breakpoint-matching) sets
            // output a media query with a new image and aspect ratio
            @each $imageBreakpointName, $imageBreakpoint in $imageset {
                @if map-has-key($breakpoints, $imageBreakpointName) {
                    @include mq($imageBreakpointName) {
                        @include makeHeroImage($imageBreakpoint);
                    }
                }
            }
        }
    }
}